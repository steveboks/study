{"version":3,"file":"static/webpack/static/development/pages/signup.js.c9235889db4723fb6173.hot-update.js","sources":["webpack:///./pages/signup.js"],"sourcesContent":["//원래 안써도 되지만\nimport React, {useState, useCallback} from 'react';\nimport { Input, Form, Checkbox, Button } from 'antd';\n\n// 프로타입스 테스트 : TextInput 컴포넌트는 부모로부터 문자열인 값을 기대하고 있는 시나리오임.\n// 철저하게 한다.\nimport PropTypes from 'prop-types';\nconst TextInput = ({value}) => {\n    return (\n        <div>{value}</div>\n    )\n};\nTextInput.propTypes = {\n    value: PropTypes.string,\n};\n\n// 훅스 문법 사용\nconst Signup = () => {\n    //스테이트\n    // 커스텀 훅으로 대체\n    //const [id, setId] = useState('');\n    //const [nick, setNick] = useState('');\n    //const [password, setPassword] = useState('');\n    const [passwordcheck, setPasswordCheck] = useState('');\n    const [term, setTerm] = useState(false);\n    const [passwordError, setPasswordError] = useState(false);\n    const [termError, setTermError] = useState(false);\n\n    // 커스텀훅 추가\n    const useInput = (initValue = null) => {\n        const [value, setter] = useState(initValue);\n        const handler = useCallback((e) => { \n            setter(e.target.value); \n        }, []);\n        return [value, handler];\n    };\n    const [id, onChangeId] = useInput('');\n    const [nick, onChangeNick] = useInput('');\n    const [password, onChangePassword] = useInput('');\n\n\n    //리스너\n    const onSubmit = useCallback((e) => {\n        e.preventDefault();\n        // 패스워드 검증\n        if(password !== passwordcheck){\n            return setPasswordError(true);\n        }\n        if(!term){\n            return setTermError(true);\n        }\n        console.log({\n            id,\n            nick,\n            password,\n            passwordcheck,\n            term\n        });\n    }, [password, passwordcheck, term]);\n    \n    // 커스텀 훅으로 대체\n    // const onChangeId = (e) => {\n    //     setId(e.target.value);\n    // };\n    // const onChangeNick = (e) => {\n    //     setNick(e.target.value);\n    // };\n    // const onChangePassword = (e) => {\n    //     setPassword(e.target.value);\n    // };\n    const onChangePasswordCheck = useCallback((e) => {\n        // 입력값에 상태변화에 비밀번호 값이 일치하지 않는지 체크\n        setPasswordError(e.target.value !== password);\n        setPasswordCheck(e.target.value);\n    }, [password]);\n    const onChangeTerm = useCallback((e) => {\n        // 에러는 기본적으로 꺼준다.\n        setTermError(false);\n        setTerm(e.target.checked);\n    }, []);\n\n\n\treturn (\n        <>\n            <Form onSubmit={onSubmit} style={{ padding:10}}>\n                \n                <TextInput value=\"135\" />\n                <div>\n                    <label htmlFor=\"user-id\">아이디</label>\n                    <br />\n                    <Input name=\"user-id\" value={id} required onChange={onChangeId} />\n                </div>\n                <div>\n                    <label htmlFor=\"user-nick\">닉네임</label>\n                    <br />\n                    <Input name=\"user-nick\" value={nick} required onChange={onChangeNick} />\n                </div>\n                <div>\n                    <label htmlFor=\"user-password\">비밀번호</label>\n                    <br />\n                    <Input name=\"user-password\" value={password} type=\"password\" required onChange={onChangePassword} />\n                </div>\n                <div>\n                    <label htmlFor=\"user-password-check\">비밀번호체크</label>\n                    <br />\n                    <Input name=\"user-password-check\" value={passwordcheck} type=\"password\" required onChange={onChangePasswordCheck} />\n                    {passwordError && <div style={{ color:'red'}}>일치하지 않습니다.</div>}\n                </div>\n                <div>\n                    <Checkbox name=\"user-term\" value={term} onChange={onChangeTerm}>약관동의</Checkbox>\n                    {termError && <div style={{ color:'red'}}>약관에 동의하셔야 합니다.</div>}\n                </div>\n                <div style={{ marginTop:10}}>\n                    <Button type=\"primary\" htmlType=\"submit\">가입하기</Button>\n                </div>\n            </Form>\n            <div>사인업</div>\n        </>\n\t);\n};\n\nexport default Signup;"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAGA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AACA;AADA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AACA;AAUA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAnBA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AACA;AAuBA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;;;;A","sourceRoot":""}