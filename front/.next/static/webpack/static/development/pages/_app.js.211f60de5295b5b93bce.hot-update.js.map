{"version":3,"file":"static/webpack/static/development/pages/_app.js.211f60de5295b5b93bce.hot-update.js","sources":["webpack:///./components/AppLayout.js"],"sourcesContent":["//원래 안써도 되지만\nimport React from 'react';\nimport Link from 'next/link';\nimport PropTypes from 'prop-types';\nimport { Menu, Input, Row, Col, Card, Avatar} from 'antd';\nimport LoginForm from './LoginForm';\n\nconst dummy = {\n    nickname: '뽁스',\n    Post:[],\n    Followings:[],\n    Followers:[],\n    isLoggedIn: false\n};\n\n// 훅스 문법 사용\nconst AppLayout = ({children}) => {\n\treturn (\n\t\t<div>\n            <Menu mode=\"horizontal\">\n                <Menu.Item key=\"home\"><Link href=\"/\"><a>노드버드</a></Link></Menu.Item>\n                <Menu.Item key=\"profile\"><Link href=\"/profile\"><a>프로필</a></Link></Menu.Item>\n                <Menu.Item key=\"mail\">\n                    <Input.Search enterButton style={{ verticalAlign:'middle'}}/>\n                </Menu.Item>\n            </Menu>\n            <Row gutter={20}>\n                <Col xs={24} md={6}>\n                    {dummy.isLoggedIn \n                    ? \n                    <Card\n                        actions={[\n                            <div key=\"twit\">아하<br/>{dummy.Post.length}</div>,\n                            <div key=\"following\">팔로잉<br/>{dummy.Followings.length}</div>,\n                            <div key=\"follower\">팔로워<br/>{dummy.Followers.length}</div>\n                        ]}\n                    >\n                        <Card.Meta\n                        avatar={<Avatar>{dummy.nickname[0]}</Avatar>}\n                        title={dummy.nickname}\n                        />\n                    </Card>\n                    :\n                    <LoginForm />\n                    }\n                    \n                </Col>\n                <Col xs={24} md={12}>\n                    {children}\n                </Col>\n                <Col xs={24} md={6}>\n                \n                </Col>\n            </Row>\n            \n        </div>\n\t);\n};\n\nAppLayout.propTypes = {\n    children: PropTypes.node,\n}\n\nexport default AppLayout;"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AALA;AACA;AAQA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AACA;AACA;AACA;AADA;AAIA;;;;A","sourceRoot":""}