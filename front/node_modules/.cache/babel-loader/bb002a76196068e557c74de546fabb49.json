{"ast":null,"code":"import _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/masterskin/apps/test/front/pages/signup.js\";\n//원래 안써도 되지만\nimport React, { useState, useCallback } from 'react';\nimport { Input, Form, Checkbox, Button } from 'antd'; // 프로타입스 테스트 : TextInput 컴포넌트는 부모로부터 문자열인 값을 기대하고 있는 시나리오임.\n\nimport PropTypes from 'prop-types';\n\nvar TextInput = function TextInput(_ref) {\n  var value = _ref.value;\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, value);\n};\n\nTextInput.PropTypes = {\n  value: PropTypes.string\n}; // 훅스 문법 사용\n\nvar Signup = function Signup() {\n  //스테이트\n  // 커스텀 훅으로 대체\n  //const [id, setId] = useState('');\n  //const [nick, setNick] = useState('');\n  //const [password, setPassword] = useState('');\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      passwordcheck = _useState2[0],\n      setPasswordCheck = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      term = _useState4[0],\n      setTerm = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      passwordError = _useState6[0],\n      setPasswordError = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      termError = _useState8[0],\n      setTermError = _useState8[1]; // 커스텀훅 추가\n\n\n  var useInput = function useInput() {\n    var initValue = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n\n    var _useState9 = useState(initValue),\n        _useState10 = _slicedToArray(_useState9, 2),\n        value = _useState10[0],\n        setter = _useState10[1];\n\n    var handler = useCallback(function (e) {\n      setter(e.target.value);\n    }, []);\n    return [value, handler];\n  };\n\n  var _useInput = useInput(''),\n      _useInput2 = _slicedToArray(_useInput, 2),\n      id = _useInput2[0],\n      onChangeId = _useInput2[1];\n\n  var _useInput3 = useInput(''),\n      _useInput4 = _slicedToArray(_useInput3, 2),\n      nick = _useInput4[0],\n      onChangeNick = _useInput4[1];\n\n  var _useInput5 = useInput(''),\n      _useInput6 = _slicedToArray(_useInput5, 2),\n      password = _useInput6[0],\n      onChangePassword = _useInput6[1]; //리스너\n\n\n  var onSubmit = useCallback(function (e) {\n    e.preventDefault(); // 패스워드 검증\n\n    if (password !== passwordcheck) {\n      return setPasswordError(true);\n    }\n\n    if (!term) {\n      return setTermError(true);\n    }\n\n    console.log({\n      id: id,\n      nick: nick,\n      password: password,\n      passwordcheck: passwordcheck,\n      term: term\n    });\n  }, [password, passwordcheck, term]); // 커스텀 훅으로 대체\n  // const onChangeId = (e) => {\n  //     setId(e.target.value);\n  // };\n  // const onChangeNick = (e) => {\n  //     setNick(e.target.value);\n  // };\n  // const onChangePassword = (e) => {\n  //     setPassword(e.target.value);\n  // };\n\n  var onChangePasswordCheck = useCallback(function (e) {\n    // 입력값에 상태변화에 비밀번호 값이 일치하지 않는지 체크\n    setPasswordError(e.target.value !== password);\n    setPasswordCheck(e.target.value);\n  }, [password]);\n  var onChangeTerm = useCallback(function (e) {\n    // 에러는 기본적으로 꺼준다.\n    setTermError(false);\n    setTerm(e.target.checked);\n  }, []);\n  return React.createElement(React.Fragment, null, React.createElement(Form, {\n    onSubmit: onSubmit,\n    style: {\n      padding: 10\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, React.createElement(TextInput, {\n    value: 135,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"user-id\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, \"\\uC544\\uC774\\uB514\"), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }), React.createElement(Input, {\n    name: \"user-id\",\n    value: id,\n    required: true,\n    onChange: onChangeId,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"user-nick\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, \"\\uB2C9\\uB124\\uC784\"), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }), React.createElement(Input, {\n    name: \"user-nick\",\n    value: nick,\n    required: true,\n    onChange: onChangeNick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"user-password\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, \"\\uBE44\\uBC00\\uBC88\\uD638\"), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }), React.createElement(Input, {\n    name: \"user-password\",\n    value: password,\n    type: \"password\",\n    required: true,\n    onChange: onChangePassword,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"user-password-check\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, \"\\uBE44\\uBC00\\uBC88\\uD638\\uCCB4\\uD06C\"), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }), React.createElement(Input, {\n    name: \"user-password-check\",\n    value: passwordcheck,\n    type: \"password\",\n    required: true,\n    onChange: onChangePasswordCheck,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }), passwordError && React.createElement(\"div\", {\n    style: {\n      color: 'red'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, \"\\uC77C\\uCE58\\uD558\\uC9C0 \\uC54A\\uC2B5\\uB2C8\\uB2E4.\")), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, React.createElement(Checkbox, {\n    name: \"user-term\",\n    value: term,\n    onChange: onChangeTerm,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, \"\\uC57D\\uAD00\\uB3D9\\uC758\"), termError && React.createElement(\"div\", {\n    style: {\n      color: 'red'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, \"\\uC57D\\uAD00\\uC5D0 \\uB3D9\\uC758\\uD558\\uC154\\uC57C \\uD569\\uB2C8\\uB2E4.\")), React.createElement(\"div\", {\n    style: {\n      marginTop: 10\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, React.createElement(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, \"\\uAC00\\uC785\\uD558\\uAE30\"))), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, \"\\uC0AC\\uC778\\uC5C5\"));\n};\n\nexport default Signup;","map":{"version":3,"sources":["/Users/masterskin/apps/test/front/pages/signup.js"],"names":["React","useState","useCallback","Input","Form","Checkbox","Button","PropTypes","TextInput","value","string","Signup","passwordcheck","setPasswordCheck","term","setTerm","passwordError","setPasswordError","termError","setTermError","useInput","initValue","setter","handler","e","target","id","onChangeId","nick","onChangeNick","password","onChangePassword","onSubmit","preventDefault","console","log","onChangePasswordCheck","onChangeTerm","checked","padding","color","marginTop"],"mappings":"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","sourcesContent":["//원래 안써도 되지만\nimport React, {useState, useCallback} from 'react';\nimport { Input, Form, Checkbox, Button } from 'antd';\n\n// 프로타입스 테스트 : TextInput 컴포넌트는 부모로부터 문자열인 값을 기대하고 있는 시나리오임.\nimport PropTypes from 'prop-types';\nconst TextInput = ({value}) => {\n    return (\n        <div>{value}</div>\n    )\n};\nTextInput.PropTypes = {\n    value: PropTypes.string,\n};\n\n// 훅스 문법 사용\nconst Signup = () => {\n    //스테이트\n    // 커스텀 훅으로 대체\n    //const [id, setId] = useState('');\n    //const [nick, setNick] = useState('');\n    //const [password, setPassword] = useState('');\n    const [passwordcheck, setPasswordCheck] = useState('');\n    const [term, setTerm] = useState(false);\n    const [passwordError, setPasswordError] = useState(false);\n    const [termError, setTermError] = useState(false);\n\n    // 커스텀훅 추가\n    const useInput = (initValue = null) => {\n        const [value, setter] = useState(initValue);\n        const handler = useCallback((e) => { \n            setter(e.target.value); \n        }, []);\n        return [value, handler];\n    };\n    const [id, onChangeId] = useInput('');\n    const [nick, onChangeNick] = useInput('');\n    const [password, onChangePassword] = useInput('');\n\n\n    //리스너\n    const onSubmit = useCallback((e) => {\n        e.preventDefault();\n        // 패스워드 검증\n        if(password !== passwordcheck){\n            return setPasswordError(true);\n        }\n        if(!term){\n            return setTermError(true);\n        }\n        console.log({\n            id,\n            nick,\n            password,\n            passwordcheck,\n            term\n        });\n    }, [password, passwordcheck, term]);\n    \n    // 커스텀 훅으로 대체\n    // const onChangeId = (e) => {\n    //     setId(e.target.value);\n    // };\n    // const onChangeNick = (e) => {\n    //     setNick(e.target.value);\n    // };\n    // const onChangePassword = (e) => {\n    //     setPassword(e.target.value);\n    // };\n    const onChangePasswordCheck = useCallback((e) => {\n        // 입력값에 상태변화에 비밀번호 값이 일치하지 않는지 체크\n        setPasswordError(e.target.value !== password);\n        setPasswordCheck(e.target.value);\n    }, [password]);\n    const onChangeTerm = useCallback((e) => {\n        // 에러는 기본적으로 꺼준다.\n        setTermError(false);\n        setTerm(e.target.checked);\n    }, []);\n\n\n\treturn (\n        <>\n            <Form onSubmit={onSubmit} style={{ padding:10}}>\n                <TextInput value={135} />\n                <div>\n                    <label htmlFor=\"user-id\">아이디</label>\n                    <br />\n                    <Input name=\"user-id\" value={id} required onChange={onChangeId} />\n                </div>\n                <div>\n                    <label htmlFor=\"user-nick\">닉네임</label>\n                    <br />\n                    <Input name=\"user-nick\" value={nick} required onChange={onChangeNick} />\n                </div>\n                <div>\n                    <label htmlFor=\"user-password\">비밀번호</label>\n                    <br />\n                    <Input name=\"user-password\" value={password} type=\"password\" required onChange={onChangePassword} />\n                </div>\n                <div>\n                    <label htmlFor=\"user-password-check\">비밀번호체크</label>\n                    <br />\n                    <Input name=\"user-password-check\" value={passwordcheck} type=\"password\" required onChange={onChangePasswordCheck} />\n                    {passwordError && <div style={{ color:'red'}}>일치하지 않습니다.</div>}\n                </div>\n                <div>\n                    <Checkbox name=\"user-term\" value={term} onChange={onChangeTerm}>약관동의</Checkbox>\n                    {termError && <div style={{ color:'red'}}>약관에 동의하셔야 합니다.</div>}\n                </div>\n                <div style={{ marginTop:10}}>\n                    <Button type=\"primary\" htmlType=\"submit\">가입하기</Button>\n                </div>\n            </Form>\n            <div>사인업</div>\n        </>\n\t);\n};\n\nexport default Signup;"]},"metadata":{},"sourceType":"module"}